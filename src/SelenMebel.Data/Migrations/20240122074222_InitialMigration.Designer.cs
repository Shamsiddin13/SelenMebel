// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SelenMebel.Data.DbContexts;

#nullable disable

namespace SelenMebel.Data.Migrations
{
    [DbContext(typeof(SelenMebelDbContext))]
    [Migration("20240122074222_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SelenMebel.Domain.Entities.Category", b =>
                {
                    b.Property<long>("TypeOfFurnitureId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TypeOfFurnitureId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.Furniture", b =>
                {
                    b.Property<long>("UniqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UniqueId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("FurnitureFeatureId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UniqueId");

                    b.HasIndex("FurnitureFeatureId");

                    b.ToTable("Furnitures");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.FurnitureCategory", b =>
                {
                    b.Property<long>("FurnitureId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CategoryTypeOfFurnitureId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("FurnitureCategoryCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FurnitureCategoryFurnitureId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FurnitureId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CategoryTypeOfFurnitureId");

                    b.HasIndex("FurnitureCategoryFurnitureId", "FurnitureCategoryCategoryId");

                    b.ToTable("FurnitureCategories");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.FurnitureFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FurnitureFeatures");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.TypeOfFurniture", b =>
                {
                    b.Property<long>("FurnitureId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FurnitureId");

                    b.ToTable("TypeOfFurnitures");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.Category", b =>
                {
                    b.HasOne("SelenMebel.Domain.Entities.TypeOfFurniture", "TypeOfFurniture")
                        .WithMany()
                        .HasForeignKey("TypeOfFurnitureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TypeOfFurniture");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.Furniture", b =>
                {
                    b.HasOne("SelenMebel.Domain.Entities.FurnitureFeature", "FurnitureFeature")
                        .WithMany()
                        .HasForeignKey("FurnitureFeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FurnitureFeature");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.FurnitureCategory", b =>
                {
                    b.HasOne("SelenMebel.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SelenMebel.Domain.Entities.Category", null)
                        .WithMany("Furnitures")
                        .HasForeignKey("CategoryTypeOfFurnitureId");

                    b.HasOne("SelenMebel.Domain.Entities.Furniture", "Furniture")
                        .WithMany()
                        .HasForeignKey("FurnitureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SelenMebel.Domain.Entities.FurnitureCategory", null)
                        .WithMany("Categories")
                        .HasForeignKey("FurnitureCategoryFurnitureId", "FurnitureCategoryCategoryId");

                    b.Navigation("Category");

                    b.Navigation("Furniture");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.FurnitureFeature", b =>
                {
                    b.HasOne("SelenMebel.Domain.Entities.FurnitureFeature", null)
                        .WithMany("FurnitureFeatures")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.TypeOfFurniture", b =>
                {
                    b.HasOne("SelenMebel.Domain.Entities.Furniture", "Furniture")
                        .WithOne()
                        .HasForeignKey("SelenMebel.Domain.Entities.TypeOfFurniture", "FurnitureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Furniture");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.Category", b =>
                {
                    b.Navigation("Furnitures");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.FurnitureCategory", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("SelenMebel.Domain.Entities.FurnitureFeature", b =>
                {
                    b.Navigation("FurnitureFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
